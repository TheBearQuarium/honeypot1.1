0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'postgres' ]
2 info using npm@3.10.3
3 info using node@v6.3.1
4 silly loadCurrentTree Starting
5 silly install loadCurrentTree
6 silly install readGlobalPackageData
7 silly fetchPackageMetaData postgres
8 silly fetchNamedPackageData postgres
9 silly mapToRegistry name postgres
10 silly mapToRegistry using default registry
11 silly mapToRegistry registry https://registry.npmjs.org/
12 silly mapToRegistry data Result {
12 silly mapToRegistry   raw: 'postgres',
12 silly mapToRegistry   scope: null,
12 silly mapToRegistry   escapedName: 'postgres',
12 silly mapToRegistry   name: 'postgres',
12 silly mapToRegistry   rawSpec: '',
12 silly mapToRegistry   spec: 'latest',
12 silly mapToRegistry   type: 'tag' }
13 silly mapToRegistry uri https://registry.npmjs.org/postgres
14 verbose request uri https://registry.npmjs.org/postgres
15 verbose request no auth needed
16 info attempt registry request try #1 at 2:06:33 PM
17 verbose request id e1f0895a37125297
18 http request GET https://registry.npmjs.org/postgres
19 http 200 https://registry.npmjs.org/postgres
20 verbose headers { server: 'nginx/1.10.1',
20 verbose headers   'content-type': 'application/json',
20 verbose headers   'last-modified': 'Tue, 29 Sep 2009 17:21:33 GMT',
20 verbose headers   etag: 'W/"4ac2421d-304"',
20 verbose headers   'content-encoding': 'gzip',
20 verbose headers   'cache-control': 'max-age=300',
20 verbose headers   'content-length': '417',
20 verbose headers   'accept-ranges': 'bytes',
20 verbose headers   date: 'Thu, 19 Jan 2017 20:06:34 GMT',
20 verbose headers   via: '1.1 varnish',
20 verbose headers   age: '0',
20 verbose headers   connection: 'keep-alive',
20 verbose headers   'x-served-by': 'cache-dfw1839-DFW',
20 verbose headers   'x-cache': 'MISS',
20 verbose headers   'x-cache-hits': '0',
20 verbose headers   'x-timer': 'S1484856394.095118,VS0,VE68',
20 verbose headers   vary: 'Accept-Encoding' }
21 silly get cb [ 200,
21 silly get   { server: 'nginx/1.10.1',
21 silly get     'content-type': 'application/json',
21 silly get     'last-modified': 'Tue, 29 Sep 2009 17:21:33 GMT',
21 silly get     etag: 'W/"4ac2421d-304"',
21 silly get     'content-encoding': 'gzip',
21 silly get     'cache-control': 'max-age=300',
21 silly get     'content-length': '417',
21 silly get     'accept-ranges': 'bytes',
21 silly get     date: 'Thu, 19 Jan 2017 20:06:34 GMT',
21 silly get     via: '1.1 varnish',
21 silly get     age: '0',
21 silly get     connection: 'keep-alive',
21 silly get     'x-served-by': 'cache-dfw1839-DFW',
21 silly get     'x-cache': 'MISS',
21 silly get     'x-cache-hits': '0',
21 silly get     'x-timer': 'S1484856394.095118,VS0,VE68',
21 silly get     vary: 'Accept-Encoding' } ]
22 verbose get saving postgres to /Users/gracehalbert/.npm/registry.npmjs.org/postgres/.cache.json
23 verbose correctMkdir /Users/gracehalbert/.npm correctMkdir not in flight; initializing
24 silly install normalizeTree
25 silly loadCurrentTree Finishing
26 silly loadIdealTree Starting
27 silly install loadIdealTree
28 silly cloneCurrentTree Starting
29 silly install cloneCurrentTreeToIdealTree
30 silly cloneCurrentTree Finishing
31 silly loadShrinkwrap Starting
32 silly install loadShrinkwrap
33 silly loadShrinkwrap Finishing
34 silly loadAllDepsIntoIdealTree Starting
35 silly install loadAllDepsIntoIdealTree
36 silly resolveWithNewModule postgres@0.0.1 checking installable status
37 silly cache add args [ 'postgres', null ]
38 verbose cache add spec postgres
39 silly cache add parsed spec Result {
39 silly cache add   raw: 'postgres',
39 silly cache add   scope: null,
39 silly cache add   escapedName: 'postgres',
39 silly cache add   name: 'postgres',
39 silly cache add   rawSpec: '',
39 silly cache add   spec: 'latest',
39 silly cache add   type: 'tag' }
40 silly addNamed postgres@latest
41 verbose addNamed "latest" is being treated as a dist-tag for postgres
42 info addNameTag [ 'postgres', 'latest' ]
43 silly mapToRegistry name postgres
44 silly mapToRegistry using default registry
45 silly mapToRegistry registry https://registry.npmjs.org/
46 silly mapToRegistry data Result {
46 silly mapToRegistry   raw: 'postgres',
46 silly mapToRegistry   scope: null,
46 silly mapToRegistry   escapedName: 'postgres',
46 silly mapToRegistry   name: 'postgres',
46 silly mapToRegistry   rawSpec: '',
46 silly mapToRegistry   spec: 'latest',
46 silly mapToRegistry   type: 'tag' }
47 silly mapToRegistry uri https://registry.npmjs.org/postgres
48 verbose addNameTag registry:https://registry.npmjs.org/postgres not in flight; fetching
49 verbose get https://registry.npmjs.org/postgres not expired, no request
50 silly addNameTag next cb for postgres with tag latest
51 silly addNamed postgres@0.0.1
52 verbose addNamed "0.0.1" is a plain semver version for postgres
53 silly mapToRegistry name postgres
54 silly mapToRegistry using default registry
55 silly mapToRegistry registry https://registry.npmjs.org/
56 silly mapToRegistry data Result {
56 silly mapToRegistry   raw: 'postgres',
56 silly mapToRegistry   scope: null,
56 silly mapToRegistry   escapedName: 'postgres',
56 silly mapToRegistry   name: 'postgres',
56 silly mapToRegistry   rawSpec: '',
56 silly mapToRegistry   spec: 'latest',
56 silly mapToRegistry   type: 'tag' }
57 silly mapToRegistry uri https://registry.npmjs.org/postgres
58 verbose addRemoteTarball https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
59 verbose addRemoteTarball [ 'https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz',
59 verbose addRemoteTarball   '93aecd0a7fcf620792bcc2c87a2ead432adaa833' ]
60 info retry fetch attempt 1 at 2:06:34 PM
61 info attempt registry request try #1 at 2:06:34 PM
62 http fetch GET https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
63 http fetch 200 https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
64 silly fetchAndShaCheck shasum 93aecd0a7fcf620792bcc2c87a2ead432adaa833
65 verbose addTmpTarball /var/folders/yp/3w3h7b1d1r942b0kqdcj8s9r0000gp/T/npm-12819-cb444bf3/registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
66 verbose addTmpTarball already have metadata; skipping unpack for postgres@0.0.1
67 verbose correctMkdir /Users/gracehalbert/.npm correctMkdir not in flight; initializing
68 silly cache afterAdd postgres@0.0.1
69 verbose afterAdd /Users/gracehalbert/.npm/postgres/0.0.1/package/package.json not in flight; writing
70 verbose correctMkdir /Users/gracehalbert/.npm correctMkdir not in flight; initializing
71 verbose afterAdd /Users/gracehalbert/.npm/postgres/0.0.1/package/package.json written
72 silly loadAllDepsIntoIdealTree Finishing
73 silly loadIdealTree Finishing
74 silly currentTree lib
75 silly idealTree lib
75 silly idealTree └── postgres@0.0.1
76 silly generateActionsToTake Starting
77 silly install generateActionsToTake
78 silly generateActionsToTake Finishing
79 silly diffTrees action count 1
80 silly diffTrees add postgres@0.0.1
81 silly decomposeActions action count 8
82 silly decomposeActions fetch postgres@0.0.1
83 silly decomposeActions extract postgres@0.0.1
84 silly decomposeActions test postgres@0.0.1
85 silly decomposeActions preinstall postgres@0.0.1
86 silly decomposeActions build postgres@0.0.1
87 silly decomposeActions install postgres@0.0.1
88 silly decomposeActions postinstall postgres@0.0.1
89 silly decomposeActions finalize postgres@0.0.1
90 silly executeActions Starting
91 silly install executeActions
92 silly doSerial global-install 0
93 silly doParallel fetch 1
94 verbose correctMkdir /Users/gracehalbert/.npm/_locks correctMkdir not in flight; initializing
95 verbose lock using /Users/gracehalbert/.npm/_locks/staging-3a08f0df5026584d.lock for /usr/local/lib/node_modules/.staging
96 silly doParallel extract 1
97 silly extract postgres@0.0.1
98 verbose unbuild lib/node_modules/.staging/postgres-f8e30b12
99 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12 is being purged from base /usr/local
100 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12
101 verbose tar unpack /Users/gracehalbert/.npm/postgres/0.0.1/package.tgz
102 verbose tar unpacking to /usr/local/lib/node_modules/.staging/postgres-f8e30b12
103 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12 is being purged
104 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12
105 silly gunzTarPerm modes [ '755', '644' ]
106 silly gunzTarPerm extractEntry
107 silly gunzTarPerm extractEntry .gitignore
108 silly gunzTarPerm extractEntry ._.npmignore
109 silly gunzTarPerm extractEntry .npmignore
110 silly gunzTarPerm extractEntry binding.cc
111 silly gunzTarPerm extractEntry LICENSE-MIT
112 silly gunzTarPerm extractEntry ._package.json
113 silly gunzTarPerm extractEntry package.json
114 silly gunzTarPerm extractEntry postgres.js
115 silly gunzTarPerm extractEntry README
116 silly gunzTarPerm extractEntry test.js
117 silly gunzTarPerm extractEntry type-oids.h
118 silly gunzTarPerm extractEntry wscript
119 silly gentlyRm /usr/local/lib/node_modules/.staging/postgres-f8e30b12/node_modules is being purged
120 verbose gentlyRm don't care about contents; nuking /usr/local/lib/node_modules/.staging/postgres-f8e30b12/node_modules
121 silly doParallel preinstall 1
122 silly preinstall postgres@0.0.1 /usr/local/lib/node_modules/.staging/postgres-f8e30b12
123 info lifecycle postgres@0.0.1~preinstall: postgres@0.0.1
124 silly lifecycle postgres@0.0.1~preinstall: no script for preinstall, continuing
125 silly doReverseSerial remove 0
126 silly doSerial move 0
127 silly doSerial finalize 1
128 silly finalize /usr/local/lib/node_modules/postgres
129 silly doSerial build 1
130 silly build postgres@0.0.1
131 info linkStuff postgres@0.0.1
132 silly linkStuff postgres@0.0.1 has /usr/local/lib/node_modules as its parent node_modules
133 silly linkStuff postgres@0.0.1 is part of a global install
134 silly linkStuff postgres@0.0.1 is installed into a global node_modules
135 silly linkStuff postgres@0.0.1 is installed into the top-level global node_modules
136 verbose linkBins postgres@0.0.1
137 verbose linkMans postgres@0.0.1
138 silly doSerial global-link 0
139 silly doParallel update-linked 0
140 silly doSerial install 1
141 silly install postgres@0.0.1 /usr/local/lib/node_modules/.staging/postgres-f8e30b12
142 info lifecycle postgres@0.0.1~install: postgres@0.0.1
143 verbose lifecycle postgres@0.0.1~install: unsafe-perm in lifecycle true
144 verbose lifecycle postgres@0.0.1~install: PATH: /usr/local/lib/node_modules/npm/bin/node-gyp-bin:/usr/local/lib/node_modules/postgres/node_modules/.bin:/usr/local/lib/node_modules/.bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/Library/TeX/texbin
145 verbose lifecycle postgres@0.0.1~install: CWD: /usr/local/lib/node_modules/postgres
146 silly lifecycle postgres@0.0.1~install: Args: [ '-c', 'node-waf configure build' ]
147 info lifecycle postgres@0.0.1~install: Failed to exec install script
148 verbose unlock done using /Users/gracehalbert/.npm/_locks/staging-3a08f0df5026584d.lock for /usr/local/lib/node_modules/.staging
149 silly rollbackFailedOptional Starting
150 silly rollbackFailedOptional Finishing
151 silly runTopLevelLifecycles Starting
152 silly runTopLevelLifecycles Finishing
153 silly install printInstalled
154 verbose stack Error: postgres@0.0.1 install: `node-waf configure build`
154 verbose stack spawn ENOENT
154 verbose stack     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/spawn.js:33:16)
154 verbose stack     at emitTwo (events.js:106:13)
154 verbose stack     at ChildProcess.emit (events.js:191:7)
154 verbose stack     at maybeClose (internal/child_process.js:852:16)
154 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:215:5)
155 verbose pkgid postgres@0.0.1
156 verbose cwd /Users/gracehalbert/Documents/gitimmersion/opspark/projects/honeypoy1.1/honeypot-api
157 error Darwin 15.6.0
158 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "install" "-g" "postgres"
159 error node v6.3.1
160 error npm  v3.10.3
161 error file sh
162 error code ELIFECYCLE
163 error errno ENOENT
164 error syscall spawn
165 error postgres@0.0.1 install: `node-waf configure build`
165 error spawn ENOENT
166 error Failed at the postgres@0.0.1 install script 'node-waf configure build'.
166 error Make sure you have the latest version of node.js and npm installed.
166 error If you do, this is most likely a problem with the postgres package,
166 error not with npm itself.
166 error Tell the author that this fails on your system:
166 error     node-waf configure build
166 error You can get information on how to open an issue for this project with:
166 error     npm bugs postgres
166 error Or if that isn't available, you can get their info via:
166 error     npm owner ls postgres
166 error There is likely additional logging output above.
167 verbose exit [ 1, true ]
